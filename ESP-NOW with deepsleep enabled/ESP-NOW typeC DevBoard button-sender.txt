#include <WiFi.h>
#include <esp_now.h>

#define BUTTON_PIN 26
uint8_t wemosAddress[] = {0x3C,0x71,0xBF,0x70,0x6E,0x94};

typedef struct { char msg[64]; } packet_t;
packet_t outgoing;
RTC_DATA_ATTR int counter = 0;

void onSent(const wifi_tx_info_t *tx_info, esp_now_send_status_t status){
  Serial.print("TYPEC send -> ");
  Serial.println(status == ESP_NOW_SEND_SUCCESS ? "OK" : "FAIL");
}

void setup(){
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  delay(100); // wait for WiFi stack after wake

  pinMode(BUTTON_PIN, INPUT_PULLDOWN);

  if (esp_now_init() != ESP_OK) { Serial.println("ESP-NOW init failed"); return; }
  esp_now_register_send_cb(onSent);

  esp_now_peer_info_t peer = {};
  memcpy(peer.peer_addr, wemosAddress, 6);
  peer.channel = 0;
  peer.encrypt = false;
  esp_now_add_peer(&peer);

  // Read button once after wake
  if (digitalRead(BUTTON_PIN)==HIGH) counter++;

  snprintf(outgoing.msg, sizeof(outgoing.msg), "TYPEC,%d", counter);
  esp_err_t result = esp_now_send(wemosAddress, (uint8_t*)&outgoing, sizeof(outgoing));
  Serial.print("esp_now_send result = "); Serial.println(result);

  delay(200); // allow sending before sleep
  Serial.println("Going to deep sleep for 60s...");
  esp_deep_sleep(60e6);
}

void loop(){}
